#include <iostream>
#include <string>
#include <vector>
#include <random>

class Character {
private:
    std::string name;
    int attack;
    std::vector<std::string> abilities;

public:
    Character(const std::string& name, int attack) : name(name), attack(attack) {}

    ~Character() {
        std::cout << "Character " << name << " destroyed." << std::endl;
    }

    void addAbility(const std::string& ability) {
        abilities.push_back(ability);
    }

    void printRandomAbility() {
        if (abilities.empty()) return;

        std::random_device rd;
        std::mt19937 gen(rd());
        std::uniform_int_distribution<> distrib(0, abilities.size() - 1);
        std::cout << name << " uses: " << abilities[distrib(gen)] << std::endl;
    }

    int calculateDamage(const std::string& stat) {
        if (stat == "attack") {
            return attack;
        }
        return 0;
    }
};

int main() {
    Character hero("Hero", 10);
    hero.addAbility("Punch");
    hero.addAbility("Kick");
    hero.printRandomAbility();
    std::cout << "Damage: " << hero.calculateDamage("attack") << std::endl;
    return 0;
}
