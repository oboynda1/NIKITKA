#include <iostream>
#include <string>

using namespace std;

class Vehicle {
protected:
    string brand; 
    int year;     

public:
    Vehicle(const string& brand, int year) : brand(brand), year(year) {}

    virtual void displayInfo() const = 0;

    virtual ~Vehicle() {}
};

class Car : public Vehicle {
private:
    int doors; 

public:
    Car(const string& brand, int year, int doors) : Vehicle(brand, year), doors(doors) {}

    void displayInfo() const override {
        cout << "Автомобиль: " << brand << ", Год: " << year << ", Двери: " << doors << endl;
    }
};

class Bike : public Vehicle {
private:
    bool hasCarrier;

public:
    Bike(const string& brand, int year, bool hasCarrier) : Vehicle(brand, year), hasCarrier(hasCarrier) {}

    void displayInfo() const override {
        cout << "Велосипед: " << brand << ", Год: " << year << ", Багажник: " << (hasCarrier ? "Да" : "Нет") << endl;
    }
};

void log(const string& message) {
    cout << "[ЛОГ] " << message << endl;
}

int main() {
    const int SIZE = 5;
    Vehicle* vehicles[SIZE];

    vehicles[0] = new Car("Toyota", 2020, 4);
    log("Создан автомобиль: Toyota, 2020, 4 двери");

    vehicles[1] = new Bike("Yamaha", 2019, true);
    log("Создан велосипед: Yamaha, 2019, есть багажник");

    vehicles[2] = new Car("Honda", 2021, 2);
    log("Создан автомобиль: Honda, 2021, 2 двери");

    vehicles[3] = new Bike("Suzuki", 2018, false);
    log("Создан велосипед: Suzuki, 2018, нет багажника");

    vehicles[4] = new Car("Ford", 2022, 4);
    log("Создан автомобиль: Ford, 2022, 4 двери");

    for (int i = 0; i < SIZE; i++) {
        vehicles[i]->displayInfo();
    }

    for (int i = 0; i < SIZE; i++) {
        delete vehicles[i];
    }

}
